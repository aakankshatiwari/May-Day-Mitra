# -*- coding: utf-8 -*-
"""app_MDR

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eCbbv8mpPeWX6Z_wXApvTAhRRMsqBXxi
"""

# app_mdr.py

import streamlit as st
import pandas as pd
import datetime
from PIL import Image
import os
import base64
import random

# Setup directories
os.makedirs("uploads/photos", exist_ok=True)
os.makedirs("uploads/prescriptions", exist_ok=True)

# Load mock doctor data
doctors_data = pd.DataFrame({
    "Doctor": ["Dr. A. Mehta", "Dr. B. Rani", "Dr. C. Khan", "Dr. D. Patel"],
    "Specialization": ["Cardiology", "Neurology", "General Physician", "Pulmonology"],
    "Availability": ["Available", "Available", "Busy", "Available"]
})


# 🆘 FEATURE 1: OnSite SOS
def onsite_sos():
    st.header("🆘 OnSite SOS - Climate Emergency Medical Dispatch")

    st.markdown("If you spot someone in medical distress due to climate-related issues (heatstroke, flood injury, etc.), please help save them by uploading details below.")

    name = st.text_input("Your Name (optional)")
    location = st.text_input("📍 Enter Location/Address")
    lat = st.text_input("Latitude")
    lon = st.text_input("Longitude")
    voice_text = st.text_area("Describe the emergency (optional)", help="E.g., unconscious man near park, difficulty breathing")

    image = st.file_uploader("📷 Upload photo of the person in distress", type=["jpg", "png", "jpeg"])
    if image:
        img_path = f"uploads/photos/{datetime.datetime.now().strftime('%Y%m%d%H%M%S')}_{image.name}"
        with open(img_path, "wb") as f:
            f.write(image.getbuffer())
        st.success("Photo uploaded successfully")

    if st.button("🚑 Request Medical Help"):
        st.success("Alert sent to nearest medical team")
        st.markdown(f"**Coordinates:** [{lat}, {lon}]")
        st.markdown(f"**Report:** {voice_text if voice_text else 'No description'}")
        if image:
            st.image(Image.open(image), width=200)
        st.balloons()


# 🧾 FEATURE 2: Patient Entry Pass System (MDR Card)
def mdr_pass_registration():
    st.header("📛 MDR Entry Pass Registration")

    patient_name = st.text_input("Patient Name")
    relation = st.selectbox("Your Relationship", ["Parent", "Spouse", "Child", "Friend", "Other"])
    phone = st.text_input("Phone Number")
    photo = st.file_uploader("📸 Upload Your Photo (Visitor ID)", type=["jpg", "jpeg", "png"])

    if st.button("✅ Register"):
        if patient_name and phone:
            st.success("MDR Entry Pass Created!")
            st.markdown(f"🛏️ Assigned Room: {random.randint(101, 150)} | Bed No: {random.randint(1, 4)}")
            if photo:
                st.image(photo, width=150)
        else:
            st.warning("Please enter name and phone number.")


# 🧑‍⚕️ FEATURE 3: Real-Time Doctor Appointments
def doctor_appointments():
    st.header("🩺 Doctor Appointment Booking")

    st.dataframe(doctors_data)

    doc_name = st.selectbox("Select Doctor", doctors_data["Doctor"])
    date = st.date_input("Appointment Date", min_value=datetime.date.today())
    time = st.time_input("Preferred Time")

    if st.button("📅 Book Appointment"):
        status = doctors_data[doctors_data["Doctor"] == doc_name]["Availability"].values[0]
        if status == "Available":
            st.success(f"Appointment with {doc_name} booked for {date} at {time}")
        else:
            st.warning(f"{doc_name} is currently busy. Please try another doctor.")


# 💊 FEATURE 4: Prescription Upload to Hospital Medical Store
def upload_prescription():
    st.header("💊 Send Prescription to Medical Store")

    user_id = st.text_input("Enter Your MDR Card Number")
    prescription = st.file_uploader("📄 Upload Prescription Image", type=["jpg", "jpeg", "png", "pdf"])

    if st.button("📤 Send to Pharmacy"):
        if user_id and prescription:
            file_path = f"uploads/prescriptions/{user_id}_{prescription.name}"
            with open(file_path, "wb") as f:
                f.write(prescription.getbuffer())
            st.success("Prescription sent to hospital medical store!")
        else:
            st.warning("Missing user ID or prescription.")


# 🧾 FEATURE 5: Visitor Log Verification
def visitor_verification():
    st.header("🧍 Visitor Verification to Enter Patient/Doctor Room")

    visitor_id = st.text_input("Scan/Punch MDR Card Number")
    face_photo = st.file_uploader("📷 Take a Photo for Entry Verification", type=["jpg", "jpeg", "png"])

    if st.button("🔒 Verify Entry"):
        if visitor_id and face_photo:
            st.success(f"Visitor {visitor_id} Verified. You may proceed.")
            st.image(face_photo, width=200)
        else:
            st.error("Please enter MDR Card number and photo.")


# ---- Streamlit App Structure ----
st.set_page_config(page_title="May Day Rakshak", layout="centered")
st.title("🛡️ May Day Rakshak")
st.subheader("A Secure Patient Safety & Emergency Response System")

menu = st.sidebar.radio("📋 Select Feature", [
    "🆘 OnSite SOS",
    "📛 MDR Entry Pass",
    "🩺 Doctor Appointments",
    "💊 Send Prescription",
    "🧍 Visitor Verification"
])

if menu == "🆘 OnSite SOS":
    onsite_sos()
elif menu == "📛 MDR Entry Pass":
    mdr_pass_registration()
elif menu == "🩺 Doctor Appointments":
    doctor_appointments()
elif menu == "💊 Send Prescription":
    upload_prescription()
elif menu == "🧍 Visitor Verification":
    visitor_verification()